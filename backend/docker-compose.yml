services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: clubhub
      POSTGRES_USER: clubhub
      POSTGRES_PASSWORD: clubhub
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U clubhub" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped

  minio:
    image: quay.io/minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    restart: unless-stopped

  backend:
    build: .
    env_file:
      - .env
    environment:
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres:5432/clubhub
      QUARKUS_DATASOURCE_USERNAME: clubhub
      QUARKUS_DATASOURCE_PASSWORD: clubhub
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
      MINIO_BUCKET: avatars
      MINIO_PUBLIC_URL: http://localhost:9000
      MINIO_POST_BUCKET: posts
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_started
    ports:
      - "8080:8080"
    restart: unless-stopped

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
      args:
        BASE_REGISTRY: mirror.gcr.io
        NODE_TAG: library/node:20-bullseye-slim
        NGINX_TAG: library/nginx:1.27-alpine
        FRONTEND_SRC: club-hub
        FRONTEND_DIR: .
        VITE_API_URL: "http://localhost:8080"
    depends_on:
      backend:
        condition: service_started
    ports:
      - "3000:80"
    restart: unless-stopped

volumes:
  pgdata:
  minio_data:
